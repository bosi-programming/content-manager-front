[{"/home/felipeb/personal/content-manager-front/src/index.tsx":"1","/home/felipeb/personal/content-manager-front/src/reportWebVitals.js":"2","/home/felipeb/personal/content-manager-front/src/constants.js":"3","/home/felipeb/personal/content-manager-front/src/screens/AddImage.js":"4","/home/felipeb/personal/content-manager-front/src/screens/Login.js":"5","/home/felipeb/personal/content-manager-front/src/screens/Authors.js":"6","/home/felipeb/personal/content-manager-front/src/screens/Signup.js":"7","/home/felipeb/personal/content-manager-front/src/screens/Images.js":"8","/home/felipeb/personal/content-manager-front/src/screens/Medias.js":"9","/home/felipeb/personal/content-manager-front/src/screens/AddAuthor.js":"10","/home/felipeb/personal/content-manager-front/src/screens/Quotes.js":"11","/home/felipeb/personal/content-manager-front/src/screens/AddQuote.js":"12","/home/felipeb/personal/content-manager-front/src/screens/AddMedia.js":"13","/home/felipeb/personal/content-manager-front/src/utils/deleteResource.js":"14","/home/felipeb/personal/content-manager-front/src/utils/customFetch.js":"15","/home/felipeb/personal/content-manager-front/src/App.tsx":"16","/home/felipeb/personal/content-manager-front/src/Router.tsx":"17","/home/felipeb/personal/content-manager-front/src/components/LateralMenu.tsx":"18","/home/felipeb/personal/content-manager-front/src/components/AuthorCard.tsx":"19","/home/felipeb/personal/content-manager-front/src/components/SearchAuthor.tsx":"20","/home/felipeb/personal/content-manager-front/src/components/MediaCard.tsx":"21","/home/felipeb/personal/content-manager-front/src/components/ImageCard.tsx":"22","/home/felipeb/personal/content-manager-front/src/components/SearchMedia.tsx":"23","/home/felipeb/personal/content-manager-front/src/components/QuoteCard.tsx":"24","/home/felipeb/personal/content-manager-front/src/components/ResourceCard.tsx":"25"},{"size":500,"mtime":1622054078800,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1622054078800,"results":"28","hashOfConfig":"27"},{"size":218,"mtime":1622054078800,"results":"29","hashOfConfig":"27"},{"size":2518,"mtime":1623036294448,"results":"30","hashOfConfig":"27"},{"size":2654,"mtime":1622054078800,"results":"31","hashOfConfig":"27"},{"size":1651,"mtime":1622054078800,"results":"32","hashOfConfig":"27"},{"size":2590,"mtime":1622054078800,"results":"33","hashOfConfig":"27"},{"size":2179,"mtime":1622054078800,"results":"34","hashOfConfig":"27"},{"size":2276,"mtime":1622054078800,"results":"35","hashOfConfig":"27"},{"size":2375,"mtime":1622054078800,"results":"36","hashOfConfig":"27"},{"size":2830,"mtime":1622054078800,"results":"37","hashOfConfig":"27"},{"size":2922,"mtime":1622054078800,"results":"38","hashOfConfig":"27"},{"size":4362,"mtime":1622054078800,"results":"39","hashOfConfig":"27"},{"size":303,"mtime":1622054078800,"results":"40","hashOfConfig":"27"},{"size":634,"mtime":1622054078800,"results":"41","hashOfConfig":"27"},{"size":225,"mtime":1622054078800,"results":"42","hashOfConfig":"27"},{"size":3676,"mtime":1623034731192,"results":"43","hashOfConfig":"27"},{"size":1423,"mtime":1622054078800,"results":"44","hashOfConfig":"27"},{"size":655,"mtime":1623035802455,"results":"45","hashOfConfig":"27"},{"size":823,"mtime":1623035958051,"results":"46","hashOfConfig":"27"},{"size":1318,"mtime":1623036343573,"results":"47","hashOfConfig":"27"},{"size":1346,"mtime":1623036256696,"results":"48","hashOfConfig":"27"},{"size":1222,"mtime":1623036132005,"results":"49","hashOfConfig":"27"},{"size":733,"mtime":1623035591125,"results":"50","hashOfConfig":"27"},{"size":887,"mtime":1623036008516,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"w3uern",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/felipeb/personal/content-manager-front/src/index.tsx",[],["107","108"],"/home/felipeb/personal/content-manager-front/src/reportWebVitals.js",[],["109","110"],"/home/felipeb/personal/content-manager-front/src/constants.js",[],"/home/felipeb/personal/content-manager-front/src/screens/AddImage.js",[],"/home/felipeb/personal/content-manager-front/src/screens/Login.js",[],"/home/felipeb/personal/content-manager-front/src/screens/Authors.js",[],"/home/felipeb/personal/content-manager-front/src/screens/Signup.js",[],"/home/felipeb/personal/content-manager-front/src/screens/Images.js",[],"/home/felipeb/personal/content-manager-front/src/screens/Medias.js",[],"/home/felipeb/personal/content-manager-front/src/screens/AddAuthor.js",["111"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport customFetch from \"../utils/customFetch\";\n\nconst useStyles = makeStyles({\n  content: {\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    overflowY: \"auto\",\n  },\n  formInnerContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 24,\n    height: \"100vh\",\n    width: \"100vw\",\n    justifyContent: \"center\",\n    maxWidth: 500,\n  },\n  welcomeContainer: {\n    display: \"flex\",\n  },\n  welcomeText: {\n    color: \"black\",\n    fontSize: 32,\n    fontWeight: 500,\n  },\n  button: {\n    width: \"100%\",\n    margin: \"16px 0px\",\n  },\n  signup: {\n    width: \"100%\",\n    margin: \"0px\",\n  },\n});\n\nconst AddAuthor = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [abreviation, setAbreviation] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const url = \"author\";\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const body = {\n      firstName,\n      lastName,\n      abreviation,\n    };\n\n    const postRes = await customFetch(url, options, body);\n\n    history.push(\"/author\");\n  };\n\n  return (\n    <div className={classes.content}>\n      <form className={classes.formInnerContainer} onSubmit={handleSubmit}>\n        <TextField\n          onChange={(e) => setFirstName(e.target.value)}\n          label=\"First Name\"\n          name=\"firstName\"\n          required\n        />\n        <TextField\n          onChange={(e) => setLastName(e.target.value)}\n          label=\"Last Name\"\n          name=\"lastName\"\n          required\n        />\n        <TextField\n          onChange={(e) => setAbreviation(e.target.value)}\n          label=\"Abreviation\"\n          name=\"abreviation\"\n        />\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Add New Author\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddAuthor;\n","/home/felipeb/personal/content-manager-front/src/screens/Quotes.js",[],"/home/felipeb/personal/content-manager-front/src/screens/AddQuote.js",["112"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"date-fns\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport SearchAuthor from \"../components/SearchAuthor\";\nimport SearchMedia from \"../components/SearchMedia\";\nimport customFetch from \"../utils/customFetch\";\n\nconst useStyles = makeStyles({\n  content: {\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    overflowY: \"auto\",\n  },\n  formInnerContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 24,\n    height: \"100vh\",\n    width: \"100vw\",\n    justifyContent: \"center\",\n    maxWidth: 500,\n  },\n  welcomeContainer: {\n    display: \"flex\",\n  },\n  welcomeText: {\n    color: \"black\",\n    fontSize: 32,\n    fontWeight: 500,\n  },\n  button: {\n    width: \"100%\",\n    margin: \"16px 0px\",\n  },\n  signup: {\n    width: \"100%\",\n    margin: \"0px\",\n  },\n});\n\nconst AddQuote = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [authorList, setAuthorList] = useState();\n  const [mediaList, setMediaList] = useState();\n  const [authorId, setAuthorId] = useState(\"\");\n  const [mediaId, setMediaId] = useState(\"\");\n  const [where, setWhere] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const autocompleteData = await customFetch(\"author\");\n      const autocompleteMediaData = await customFetch(\n        `media?authorId=${authorId}`\n      );\n      setAuthorList(autocompleteData);\n      setMediaList(autocompleteMediaData);\n    }\n    fetchData();\n  }, [authorId]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const url = \"quote\";\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const body = {\n      authorId,\n      mediaId,\n      where,\n      content,\n    };\n\n    const postRes = await customFetch(url, options, body);\n    history.push(\"/quote\");\n  };\n\n  return (\n    <div className={classes.content}>\n      <form className={classes.formInnerContainer} onSubmit={handleSubmit}>\n        <SearchAuthor authorList={authorList} setAuthorId={setAuthorId} />\n        <SearchMedia mediaList={mediaList} setMediaId={setMediaId} />\n        <TextField\n          onChange={(e) => setWhere(e.target.value)}\n          label=\"Where\"\n          name=\"where\"\n        />\n        <TextField\n          onChange={(e) => setContent(e.target.value)}\n          label=\"Content\"\n          name=\"content\"\n        />\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Add New Quote\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddQuote;\n","/home/felipeb/personal/content-manager-front/src/screens/AddMedia.js",["113"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  Button,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport SearchAuthor from \"../components/SearchAuthor\";\nimport customFetch from \"../utils/customFetch\";\n\nconst useStyles = makeStyles({\n  content: {\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    overflowY: \"auto\",\n  },\n  formInnerContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 24,\n    height: \"100vh\",\n    width: \"100vw\",\n    justifyContent: \"center\",\n    maxWidth: 500,\n  },\n  welcomeContainer: {\n    display: \"flex\",\n  },\n  welcomeText: {\n    color: \"black\",\n    fontSize: 32,\n    fontWeight: 500,\n  },\n  button: {\n    width: \"100%\",\n    margin: \"16px 0px\",\n  },\n  signup: {\n    width: \"100%\",\n    margin: \"0px\",\n  },\n});\n\nconst AddMedia = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [authorList, setAuthorList] = useState();\n  const [authorId, setAuthorId] = useState(\"\");\n  const [mediaName, setMediaName] = useState(\"\");\n  const [publisher, setPublisher] = useState(\"\");\n  const [dateOfPublication, setDateOfPublication] = useState(new Date());\n  const [typeOfMedia, setTypeOfMedia] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const url = `author`;\n      const autocompleteData = await customFetch(url);\n      setAuthorList(autocompleteData);\n    }\n    fetchData();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const url = \"media\";\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const body = {\n      authorId,\n      mediaName,\n      publisher,\n      dateOfPublication,\n      typeOfMedia,\n      link,\n    };\n\n    const postRes = await customFetch(url, options, body);\n    history.push(\"/media\");\n  };\n\n  return (\n    <div className={classes.content}>\n      <form className={classes.formInnerContainer} onSubmit={handleSubmit}>\n        <SearchAuthor authorList={authorList} setAuthorId={setAuthorId} />\n        <TextField\n          onChange={(e) => setMediaName(e.target.value)}\n          label=\"Media Name\"\n          name=\"publisher\"\n          required\n        />\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <KeyboardDatePicker\n            required\n            disableToolbar\n            variant=\"inline\"\n            format=\"MM/dd/yyyy\"\n            margin=\"normal\"\n            id=\"date-of-publication\"\n            label=\"Date of publication\"\n            value={dateOfPublication}\n            onChange={setDateOfPublication}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change date\",\n            }}\n          />\n        </MuiPickersUtilsProvider>\n        <TextField\n          onChange={(e) => setPublisher(e.target.value)}\n          label=\"Publisher\"\n          name=\"publisher\"\n        />\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"demo-simple-select-label\">Type of media</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={typeOfMedia}\n            onChange={(e) => setTypeOfMedia(e.target.value)}\n          >\n            <MenuItem value=\"BOOK\">Book</MenuItem>\n            <MenuItem value=\"ARTICLE\">Article</MenuItem>\n            <MenuItem value=\"BLOGPOST\">Blogpot</MenuItem>\n            <MenuItem value=\"MOVIE\">Movie</MenuItem>\n            <MenuItem value=\"WEBVIDEO\">Webvideo</MenuItem>\n          </Select>\n        </FormControl>\n        <TextField\n          onChange={(e) => setLink(e.target.value)}\n          label=\"Link\"\n          name=\"link\"\n          type=\"url\"\n        />\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Add New Media\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddMedia;\n","/home/felipeb/personal/content-manager-front/src/utils/deleteResource.js",[],"/home/felipeb/personal/content-manager-front/src/utils/customFetch.js",[],"/home/felipeb/personal/content-manager-front/src/App.tsx",[],"/home/felipeb/personal/content-manager-front/src/Router.tsx",[],"/home/felipeb/personal/content-manager-front/src/components/LateralMenu.tsx",[],"/home/felipeb/personal/content-manager-front/src/components/AuthorCard.tsx",[],"/home/felipeb/personal/content-manager-front/src/components/SearchAuthor.tsx",[],"/home/felipeb/personal/content-manager-front/src/components/MediaCard.tsx",[],"/home/felipeb/personal/content-manager-front/src/components/ImageCard.tsx",[],"/home/felipeb/personal/content-manager-front/src/components/SearchMedia.tsx",[],"/home/felipeb/personal/content-manager-front/src/components/QuoteCard.tsx",[],"/home/felipeb/personal/content-manager-front/src/components/ResourceCard.tsx",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":68,"column":11,"nodeType":"120","messageId":"121","endLine":68,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":87,"column":11,"nodeType":"120","messageId":"121","endLine":87,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":98,"column":11,"nodeType":"120","messageId":"121","endLine":98,"endColumn":18},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'postRes' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]